t.alpha <- qt(1-alpha,df=n_x-1)
t
-t.alpha
pval <- pt(t,df=n_x-1)
pval
x_data <- c(44.9,45.3,43.5,44.5,45.7,45.5,45.0,47.0)
x_bar <- mean(x_data)
sd <- sd(x_data)
mu0 <- 50
n_x <- length(x_data)
t <- (x_bar-mu0)/(sd/sqrt(n_x))
pval <- pt(t,df=n_x-1)
pval
sd
chi_sq <- (n_x-1)*sd^2/sd0^2
sd0 <- 0.5
chi_sq <- (n_x-1)*sd^2/sd0^2
chi_sq
pchisq(chi_sq,n_x-1)
pchisq(chi_sq,n_x-1, lower.tail=FALSE)
library(swirl)
swirl()
update_swirl()
install.packages("installr")
install.packages(c("boot", "class", "cluster", "devtools", "digest", "evaluate", "foreign", "httr", "KernSmooth", "lattice", "markdown", "MASS", "Matrix", "mgcv", "mvtnorm", "nlme", "nnet", "plotrix", "plyr", "rattle", "RGtk2", "rpart", "spatial"))
library(swirl)
library("swirl")
install.packages("swirl")
library("swirl")
update_swirl()
swirl()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
mySqrt <- sqrt(z - 1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times= 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num _vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Matt Moramarco")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
quit()
library(swirl)
swirl()
exit
quit()
library(swirl)
swirl()
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y,z),100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVecto)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(data = 1:20, nrow=4, ncol=5)
identical(myMatrix, myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient","age","Weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
?colnames
colnames(myData) <- cnames
myData
debug(ls)
ls
debug(ls)
ls(myData)
exit
quit()
quit()
exit()
x <- c(.6,.4)
var(x)
y <- c(.6,.4)
x_val <- c(1,2)
x_prob <- c(.6, .4)
y_val <- x_val
y_prob <- x_prob
x_val * x_prob
sum(x_val*x_prob)
x_mean <- sum(x_val*x_prob)
y_mean <- sum(y_val*y_prob)
x2_mean <- sum(x_val^2 * x_prob)
x_val - x_mean
(x_val - x_mean)^2
(x_val - x_mean)^2 * x_prob
sum((x_val - x_mean)^2 * x_prob)
x_var <- sum((x_val - x_mean)^2 * x_prob)
y_var <- sum((y_val - y_mean)^2 * y_prob)
x_val <- c(1,2)
x_prob <- c(.6, .4)
y_val <- x_val
y_prob <- x_prob
z_val <- c(2,3,4)
z_prob <- c(.5,.2,.3)
x_mean <- sum(x_val*x_prob)
y_mean <- sum(y_val*y_prob)
z_mean <- sum(z_val*z_prob)
x_var <- sum((x_val - x_mean)^2 * x_prob)
y_var <- sum((y_val - y_mean)^2 * y_prob)
z_var <- sum((z_val - z_mean)^2 * z_prob)
xbar <- 18
mu0 <- 20
sigma <- 5
n <- 8
z <- (xbar-mu0)/(sigma/sqrt(n))
z
alpha <- 001
z.alpha <- qnorm(1-alpha)
-z.alpha
z < -z.alpha
xbar <- 18
mu0 <- 20
sigma <- 5
n <- 8
z <- (xbar-mu0)/(sigma/sqrt(n))
z
alpha <- 0.01
z.alpha <- qnorm(1-alpha)
-z.alpha
z < -z.alpha
pval <- pnorm(z)
pval
pval <- pnorm(z, lower.tail=FALSE)
pval
z
z.alpha <- qnorm(1-0.01)
z.alpha
pval <- pnorm(z)
pval
x <- c(18,12,21,21,14,26,26,20)
xbar <- mean(x)
mu0 <- 20
s <- sd(x)
n <- length(x)
t <- (xbar-mu0)/(s/sqrt(n))
pval <- pt(t, df=n-1)
pval
x_plot <- seq(0,40,length=100)*s+xbar
hx_plot <-dnorm(x_plot,xbar,s)
plot(x, hx, main="Normal Distribution")
plot(x_plot, hx_plot, main="Normal Distribution")
x_plot <- seq(-4,4,length=100)*s+xbar
x_plot <- seq(-4,4,length=100)*s+xbar
hx_plot <-dnorm(x_plot,xbar,s)
plot(x_plot, hx_plot, main="Normal Distribution")
x_plot <- seq(-4,4,length=100)*s+xbar
hx_plot <-dnorm(x_plot,xbar,s)
plot(x_plot, hx_plot, type = "n", main="Normal Distribution")
lines(x_plot, hx_plot)
x_before <- c(95,108,67,99,93,77)
x_after <- c(86,97,50,83,86,61)
x_data <- cbind(x_before,x_after)
x_data
xdata[1]
x_data[1]
x_data[,1]
names(x_data)
names(x_data) <- c("before","after")
names(x_data)
x_data
x_before <- c(95,108,67,99,93,77)
x_after <- c(86,97,50,83,86,61)
x_data <- cbind(x_before,x_after)
t.test(x_data[,1],x_data[,2], paired = TRUE)
x_val <- c(1,2)
x_prob <- c(.6, .4)
y_val <- x_val
y_prob <- x_prob
z_val <- c(2,3,4)
z_prob <- c(.5,.2,.3)
x_mean <- sum(x_val*x_prob)
y_mean <- sum(y_val*y_prob)
z_mean <- sum(z_val*z_prob)
z_var <- sum((z_val - z_mean)^2 * z_prob)
z_var
x_var <- sum((x_val - x_mean)^2 * x_prob)
x_var
y_var <- sum((y_val - y_mean)^2 * y_prob)
y_var
xy_cov <- (1-x_mean)*(1-y_mean)*.5+(2-x_mean)*(1-y_mean)*.1+(2-x_mean)*(1-y_mean)*.1+(2-x_mean)*(2-y_mean)*.3
xy_cov
x_var+y_var+2*xy_cov
x_seven <- c(5.34,5.27,5.28,5.29,5.34,5.32,5.32,5.26,5.33)
xbar <- mean(x_seven)
mu0 <- 5
s <- sd(x_seven)
n <- length(x_seven)
t <- (xbar-mu0)/(s/sqrt(n))
pval <- 2* pt(t, df=n-1)
pval
pval <- 2 * pt(t, df=n-1)
pval
xbar
t
n
x_seven <- c(5.34,5.27,5.28,5.27,5.29,5.34,5.32,5.32,5.26,5.33)
xbar <- mean(x_seven)
mu0 <- 5
s <- sd(x_seven)
n <- length(x_seven)
t <- (xbar-mu0)/(s/sqrt(n))
pval <- 2 * pt(t, df=n-1)
pval
t
sd
sds
s
xbar
alpha <- 0.05
t
t
alpha <- 0.01
t.halfalpha <- qt(1-alpha/2,df=n-1)
c(-t.half.alpha, t.half.alpha)
alpha <- 0.01
t.half.alpha <- qt(1-alpha/2,df=n-1)
c(-t.half.alpha, t.half.alpha)
x_seven <- c(5.34,5.27,5.28,5.27,5.29,5.34,5.32,5.32,5.26,5.33)
xbar <- mean(x_seven)
mu0 <- 5
s <- sd(x_seven)
n <- length(x_seven)
t <- (xbar-mu0)/(s/sqrt(n))
t
alpha <- 0.01
t.half.alpha <- qt(1-alpha/2,df=n-1)
c(-t.half.alpha, t.half.alpha)
install.packages("TeachingDemos")
library(TeachingDemos)
sigma.test(x_seven, sigma=0.1,sigmasq= sigma^2, alternative="two.sided")
s
x_seven <- c(5.34,5.27,5.28,5.27,5.29,5.34,5.32,5.32,5.26,5.33)
xbar <- mean(x_seven)
mu0 <- 5
s <- sd(x_seven)
n <- length(x_seven)
t <- (xbar-mu0)/(s/sqrt(n))
t
alpha <- 0.01
t.half.alpha <- qt(1-alpha/2,df=n-1)
c(-t.half.alpha, t.half.alpha)
x_plot <- seq(-4,4,length=100)*s+xbar
hx_plot <-dnorm(x_plot,xbar,s)
qqplot(x_plot, hx_plot, type = "n", main="Average Weight")
x_plot <- seq(-4,4,length=100)*s+xbar
hx_plot <-qnorm(x_plot,xbar,s)
qqplot(x_plot, hx_plot, type = "n", main="Average Weight")
x_plot <- seq(-4,4,length=100)*s+xbar
hx_plot <-dnorm(x_plot,xbar,s)
qqplot(x_plot, hx_plot, type = "n", main="Average Weight")
lines(xplot,hx_plot)
lines(x_plot,hx_plot)
x_plot <- seq(-4,4,length=100)*s
hx_plot <-dnorm(x_plot,xbar,s)
qqplot(x_plot, hx_plot, type = "n", main="Standard Deviation")
lines(x_plot,hx_plot)
rgamma(n, shape, rate=1, scale=1/rate, log=FALSE)
n <- 10000
beta <- 5
alpha <- 20
data20 <- rgamma(n,shape = alpha, scale = beta)
ggnorm(data)
qqnorm(data)
qqnorm(data20)
qqline(data, col = 2)
qqline(data20, col = 2)
data40 <- rgamma(n,shape = 40, scale = beta)
data80 <- rgamma(n,shape = 80, scale = beta)
data100 <- rgamma(n,shape = 100, scale = beta)
qqnorm(data40)
qqline(data40, col = 2)
qqnorm(data80)
qqline(data80, col = 2)
qqnorm(data100)
qqline(data100, col = 2)
n <- 50
p <- 0.05
me <- n*p
se <- sqrt(n*p*(1-p))
me;se
x <- c(-.5,-.5,(o:n)+.5)
x <- c(-.5,-.5,(0:n)+.5)
y <- c(0,dbinom(0:n,n,p),0)
xf<- seq (-.6,n+.6,.01)
yf<-dnorm(xf,me,se)
plot(x,y,type="s")
abline(h=0)
lines(x,y,type="h")
z <- 6
xf2 <- seq(-.6,z,.01)
yf2 <- dnorm(xf2,me,se)
polygon(x3,y3,col=rainbow(12,alpha=.4)[1],border=NA)
y3 <- c(0,rep(dbinom(0:z,n,p),each=2),0,0)
x3<-c(rep(c(-.5,(0:z)+.5),each=2),0)
polygon(x3,y3,col=rainbow(12,alpha=.4)[1],border=NA)
polygon(c(0,xf2,z,0),c(0,yf2,0,0),col=rainbow(12,alpha=.4)[8],border=NA)
lines(xf,yf,col=4)
x.before <- c(95,108,67,99,93,77)
y.after <- c(86,97,50,83,86,61)
lm(y.after ~ x.before)
summary(lm(y.after ~ x.before))
norm <- rnorm(100,5,9)
mean(norm)
sum(norm)
(330-300)/(.5*sqrt(300))
-60/(3*sqrt(100))
dbinom(3,200,02)
1-dbinom(3, size=200 ,prob=0.02)
1-dbinom(2, size=200 ,prob=0.02)-dbinom(1, size=200 ,prob=0.02)-dbinom(0, size=200 ,prob=0.02)
mu <- 200*.02
sigma <- (mu*(1-0.02))^(.05)
pnorm(3, mean= mu, sd = sigma)
1-pnorm(3, mean= mu, sd = sigma)
x_val <- c(0,1)
x_prob <- c(.7,.3)
y_val <- c(1,2)
y_prob <- c(.4,.6)
z_val <- c(1,2,3)
z_prob <- c(.2,.7,.1)
x_mean <- sum(x_val*x_prob)
y_mean <- sum(y_val*y_prob)
z_mean <- sum(z_val*z_prob)
z_var <- sum((z_val-z_mean)^2 * z_prob)
x_var <- sum((x_val-x_mean)^2 * x_prob)
y_var <- sum((y_val-y_mean)^2 * y_prob)
xy_cov <- (0-x_mean)*(1-y_mean)*.2+(1-x_mean)*(1-y_mean)*.2+(0-x_mean)*(2-y_mean)*.5+(1-x_mean)*(2-y_mean)*.1
.2/.7
.5/.7
x_four <- c(467,426,437,535,402,508)
x_four_mean <- mean(x_four)
mu0 <- 500
s <- sd(x_four)
n <- length(x_four)
t = (xbar−mu0)/(s/sqrt(n))
t = (x_four_mean−mu0)/(s/sqrt(n))
t <- (x_four_mean−mu0)/(s/sqrt(n))
t <- (x_four_mean − mu0)/( s / sqrt(n))
x_four_mean - mu0
(x_four_mean - mu0)/(s/sqrt(n))
t <- (x_four_mean - mu0)/(s/sqrt(n))
t
alpha <- 0.01
t.alpha = qt(1−alpha, df=n−1)
talpha <- qt(1-alpha, df=n-1)
talpha
pnorm(t)
sigma.test(x_four,6)
library(TeachingDemos)
sigma.test(x_four,6)
sigma.test(x_four,sigma=6)
sigma.test(x_four,sigma=6, alternative="greater")
.4+.6*2
.2857+2*.7143
.6667+2*.3333
1.7413-1.3333
1.7413*.7+1.3333*.3
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
10!
factorial(10)
factorial(10)/(factorial(6)*factorial(4))
factorial(5)/(factorial(4)*factorial(1))*(.5)^5
factorial(5)/(factorial(4)*factorial(1))*(.5)^5+factorial(5)/(factorial(5)*factorial(0))*(.5)^5
choose(5,4)
choose(5,4)*(.5)^5
pbinom(4,5,.5,lower.tail=FALSE)
pbinom(4,5,.5,lower.tail=TRUE)
pbinom(3,size=5,prob=.5,lower.tail=TRUE)
pbinom(3,size=5,prob=.5,lower.tail=FALSE)
setwd("~/Projects/data_science_coursera/R Programming/Programming Assignment 1")
sample <- read.csv("/specdata/001.csv",header=TRUE)
sample <- read.csv("specdata/001.csv",header=TRUE)
head(sample)
mean(sample$sulfate, na.rm=TRUE)
summary(sample)
mean(sample$nitrate, na.rm=TRUE)
source('~/Projects/data_science_coursera/R Programming/Programming Assignment 1/pollutantmean.r')
?polluantmean
?pollutantmean
pollutantmean("specdata","sulfate",1)
pollutantmean("specdata","nitrate",1)
pollutantmean("specdata","nitrate",2)
pollutantmean("specdata","nitrate",1:2)
pollutantmean("specdata","nitrate",3:25)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
